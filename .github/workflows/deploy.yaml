name: Deploy to K3s

on:
  release:
    types: [ published ]

env:
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: tag release
        env:
          TAG: ${{ github.ref }}
        run: |
          TAG_RELEASE=${TAG#*/*/}
          echo TAG_RELEASE=$TAG_RELEASE >> $GITHUB_ENV
          echo $TAG_RELEASE
          echo ${{ env.TAG_RELEASE }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:${{ env.TAG_RELEASE }} .
          docker push ghcr.io/${{ github.repository }}:${{ env.TAG_RELEASE }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: tag release
        env:
          TAG: ${{ github.ref }}
        run: |
          TAG_RELEASE=${TAG#*/*/}
          echo TAG_RELEASE=$TAG_RELEASE >> $GITHUB_ENV
          echo $TAG_RELEASE
          echo ${{ env.TAG_RELEASE }}
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: install Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Deploy with helm
        run: |
          helm upgrade --install nodejs-backend-template ./helm-chart \
            --set image.repository=ghcr.io/${{ github.repository }} \
            --set image.tag=${{ env.TAG_RELEASE }}
